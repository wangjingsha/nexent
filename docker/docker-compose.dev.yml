name: nexent

services:
  nexent:
    image: nexent/nexent:latest
    container_name: nexent
    restart: always
    ports:
      - "5010:5010"
    volumes:
      - ../:/opt/
      - /opt/backend/.venv/
      - ${NEXENT_USER_DIR:-$HOME/nexent}:/mnt/nexent
    environment:
      skip_proxy: "true"
      UMASK: 0022
    env_file:
      - .env
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - nexent
    entrypoint: "/bin/bash"
    command:
      - -c
      - |
        rm -rf /var/lib/apt/lists/* &&
        echo "Python environment activated: $(which python)" && 
        echo "Python version: $(python --version)" && 
        tail -f /dev/null


  nexent-data-process:
    image: nexent/nexent-data-process:latest
    container_name: nexent-data-process
    restart: always
    privileged: true
    ports:
      - "5012:5012"
    volumes:
      - ../:/opt/:cached
      - /opt/backend/.venv/
      - ${NEXENT_USER_DIR:-$HOME/nexent}:/mnt/nexent
    environment:
      skip_proxy: "true"
      PATH: "/usr/local/bin:/usr/bin/:/opt/backend/.venv/bin:${PATH}"
      VIRTUAL_ENV: "/opt/backend/.venv"
    env_file:
      - .env
    networks:
      - nexent
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    entrypoint: "/bin/bash"
    command:
      - -c
      - |
        cd /opt/backend &&
        source .venv/bin/activate &&
        echo "Python environment activated: $(which python)" &&
        echo "Python version: $(python --version)" &&
        python -c "import time; time.sleep(2147483647)"

  nexent-web:
    image: nexent/nexent-web:latest
    container_name: nexent-web
    restart: always
    networks:
      - nexent
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/opt/frontend:cached
      - ../frontend/node_modules:/opt/frontend/node_modules:cached
    environment:
      - HTTP_BACKEND=http://nexent:5010
      - WS_BACKEND=ws://nexent:5010
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["/bin/sh", "-c", "echo 'Web Service needs to be started manually. Use\nnpm install -g pnpm\npnpm install\npnpm dev\n under /opt/frontend to start.' && tail -f /dev/null"]


networks:
  nexent:
    driver: bridge
